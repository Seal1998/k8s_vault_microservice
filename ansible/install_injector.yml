################
# - vars:
#     namespace
#     schecdule_pattern
#     injector_image
#     vault_api_addr
#     vault_role_name
#     vault_config_secret
################
- hosts: localhost
  gather_facts: false
  tasks:
    - name: Processing block
      block:

      - name: Create vault-injector ServiceAccount
        k8s:
          state: "{{ 'absent' if 'undeploy' in ansible_run_tags else 'present' }}"
          namespace: '{{ namespace }}'
          definition:
            apiVersion: v1
            kind: ServiceAccount
            metadata:
              name: vault-injector

      - name: Create secrets-operator role
        k8s:
          state: "{{ 'absent' if 'undeploy' in ansible_run_tags else 'present' }}"
          namespace: '{{ namespace }}'
          definition:
            apiVersion: rbac.authorization.k8s.io/v1
            kind: Role
            metadata:
              name: secrets-operator
            rules:
            - apiGroups: [""]
              resources: ["secrets"]
              verbs: ["get", "watch", "list", "create", "update", "patch", "delete"]

      - name: Create namespace-reader role
        k8s:
          state: "{{ 'absent' if 'undeploy' in ansible_run_tags else 'present' }}"
          namespace: '{{ namespace }}'
          definition:
            apiVersion: rbac.authorization.k8s.io/v1
            kind: Role
            metadata:
              name: namespace-reader
            rules:
            - apiGroups: [""]
              resources: ["namespaces"]
              verbs: ["get"]

      - name: Bind vault-injector service account to the roles
        block:
          - name: Binding vault-injector to the secrets-operator role
            k8s:
              state: "{{ 'absent' if 'undeploy' in ansible_run_tags else 'present' }}"
              namespace: '{{ namespace }}'
              definition:
                apiVersion: rbac.authorization.k8s.io/v1
                kind: RoleBinding
                metadata:
                  name: vault-injector-secrets-operator
                subjects:
                - kind: ServiceAccount
                  name: vault-injector
                roleRef:
                  kind: Role
                  name: secrets-operator
                  apiGroup: rbac.authorization.k8s.io

          - name: Binding vault-injector to the namespace-reader role
            k8s:
              state: "{{ 'absent' if 'undeploy' in ansible_run_tags else 'present' }}"
              namespace: '{{ namespace }}'
              definition:
                apiVersion: rbac.authorization.k8s.io/v1
                kind: RoleBinding
                metadata:
                  name: vault-injector-namespace-reader
                subjects:
                - kind: ServiceAccount
                  name: vault-injector
                roleRef:
                  kind: Role
                  name: namespace-reader
                  apiGroup: rbac.authorization.k8s.io

      tags:
        - deploy
        - undeploy

    - name: Deploy injector cronjob
      k8s:
        state: present
        namespace: '{{ namespace }}'
        definition:
          apiVersion: batch/v1beta1
          kind: CronJob
          metadata:
            name: vault-secrets-injector
          spec:
            schedule: "{{ schecdule_pattern }}"
            successfulJobsHistoryLimit: 3
            failedJobsHistoryLimit: 3
            jobTemplate:
              spec:
                backoffLimit: 0
                template:
                  spec:
                    serviceAccountName: vault-injector
                    restartPolicy: Never
                    containers:
                      - name: vault-k8s-secrets-injector
                        image: '{{ injector_image }}'
                        workingDir: /injector 
                        env:
                          - name: VAULT_ADDR
                            value: '{{ vault_api_addr }}'
                          - name: VAULT_ROLE
                            value: '{{ vault_role_name }}'
                          - name: VAULT_SECRET_CONFIG
                            value: '{{ vault_config_secret }}'
                          - name: VAULT_K8S_AUTH_MOUNT
                            value: '{{ auth_engine_name }}'
      tags:
        - deploy
        - redeploy